#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВидДоговора, ВКМ_ДатаНачала, ВКМ_ДатаОкончания");
	Если Данные.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_Абонент") Тогда
		ОбщегоНазначения.СообщитьПользователю("Выберите абонентский договор");
		Отказ = Истина;
	КонецЕсли;
	Если Дата < Данные.ВКМ_ДатаНачала Или Дата > Данные.ВКМ_ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьПользователю("Документ вне срока договора");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтавкаЧаса КАК СтавкаЧаса,
				   |	СУММА(ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплате) КАК ЧасыКОплате
				   |ИЗ
				   |	Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
				   |		ПО ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
				   |ГДЕ
				   |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
				   |СГРУППИРОВАТЬ ПО
				   |	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтавкаЧаса";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить().Выбрать();

	Пока Результат.Следующий() Цикл
	
		//регистр ВКМ_ВыполненныеКлиентуРаботы 
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_КоличествоЧасов = Результат.ЧасыКОплате;
		Движение.ВКМ_СуммаКОплате = Результат.ЧасыКОплате * Результат.СтавкаЧаса;

	КонецЦикла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ДатаПроведенияРабот") <> ВКМ_ДатаПроведенияРабот
		Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ВремяНачалаРабот") <> ВКМ_ВремяНачалаРабот
		Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_Специалист") <> ВКМ_Специалист Тогда
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда

		Сообщение = СтрШаблон("Новый заказ №%1 Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер, ВКМ_Специалист,
			Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда

		Сообщение = СтрШаблон("Заказ №%1 изменен. Исполнитель %2. Дата %3 интервал работ %4 - %5", Номер,
			ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(
			ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
		ДокОбъект = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		ДокОбъект.ВКМ_ТекстСоббщения = Сообщение;
		ДокОбъект.Записать();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли